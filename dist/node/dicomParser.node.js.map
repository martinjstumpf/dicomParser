{"version":3,"sources":["webpack://dicomParser/webpack/universalModuleDefinition","webpack://dicomParser/webpack/bootstrap","webpack://dicomParser/../node_modules/webpack/buildin/module.js","webpack://dicomParser/./alloc.js","webpack://dicomParser/./bigEndianByteArrayParser.js","webpack://dicomParser/./byteArrayParser.js","webpack://dicomParser/./byteStream.js","webpack://dicomParser/./dataSet.js","webpack://dicomParser/./findAndSetUNElementLength.js","webpack://dicomParser/./findEndOfEncapsulatedPixelData.js","webpack://dicomParser/./findItemDelimitationItem.js","webpack://dicomParser/./index.js","webpack://dicomParser/./littleEndianByteArrayParser.js","webpack://dicomParser/./parseDicom.js","webpack://dicomParser/./parseDicomDataSet.js","webpack://dicomParser/./readDicomElementExplicit.js","webpack://dicomParser/./readDicomElementImplicit.js","webpack://dicomParser/./readEncapsulatedImageFrame.js","webpack://dicomParser/./readEncapsulatedPixelData.js","webpack://dicomParser/./readEncapsulatedPixelDataFromFragments.js","webpack://dicomParser/./readPart10Header.js","webpack://dicomParser/./readSequenceElementExplicit.js","webpack://dicomParser/./readSequenceElementImplicit.js","webpack://dicomParser/./readSequenceItem.js","webpack://dicomParser/./readTag.js","webpack://dicomParser/./sharedCopy.js","webpack://dicomParser/./util/createJPEGBasicOffsetTable.js","webpack://dicomParser/./util/dataSetToJS.js","webpack://dicomParser/./util/elementToString.js","webpack://dicomParser/./util/index.js","webpack://dicomParser/./util/parseDA.js","webpack://dicomParser/./util/parseTM.js","webpack://dicomParser/./util/util.js","webpack://dicomParser/./version.js","webpack://dicomParser/external \"zlib\""],"names":["alloc","byteArray","length","Buffer","Uint8Array","readUint16","position","readInt16","int16","readUint32","uint32","readInt32","int32","readFloat","byteArrayForParsingFloat","floatArray","Float32Array","buffer","readDouble","Float64Array","readFixedString","result","byte","i","String","fromCharCode","ByteStream","byteArrayParser","undefined","warnings","offset","numBytes","byteArrayView","getByteArrayParser","element","defaultParser","parser","DataSet","elements","tag","index","dataOffset","fixedString","numMatching","match","values","split","trim","replace","value","string","parseFloat","parseInt","bytes","toString","substr","findAndSetUNElementLength","byteStream","itemDelimitationItemLength","maxPosition","groupNumber","elementNumber","itemDelimiterLength","seek","findEndOfEncapsulatedElement","encapsulatedPixelData","basicOffsetTable","fragments","basicOffsetTableItemTag","basicOffsetTableItemlength","numFragments","push","baseOffset","findItemDelimitationItemAndSetElementLength","default","parseDicom","parseDicomDataSet","options","readTransferSyntax","metaHeaderDataSet","x00020010","transferSyntaxElement","isExplicit","transferSyntax","getDataSetByteStream","inflater","fullByteArrayCallback","module","zlib","require","deflatedBuffer","inflatedBuffer","inflateRawSync","fullByteArrayBuffer","copy","pako","deflated","slice","inflated","inflateRaw","fullByteArray","set","mergeDataSets","instanceDataSet","propertyName","hasOwnProperty","concat","readDataSet","explicit","dataSetByteStream","dataSet","parseDicomDataSetExplicit","parseDicomDataSetImplicit","e","ex","exception","parseTheByteStream","untilTag","vrCallback","readDicomElementExplicit","getDataLengthSizeInBytesForVR","vr","dataLengthSizeBytes","hadUndefinedLength","readDicomElementImplicit","isSequence","nextTag","readEncapsulatedImageFrame","findFragmentIndexWithOffset","calculateNumberOfFragmentsForFrame","frameIndex","startFragmentIndex","nextFrameOffset","pixelDataElement","readEncapsulatedPixelData","deprecatedNoticeLogged","frame","console","log","readEncapsulatedPixelDataFromFragments","calculateBufferSize","startFragment","bufferSize","fragmentZeroPosition","fragmentHeaderSize","pixelData","pixelDataIndex","fragmentOffset","j","readPart10Header","littleEndianByteStream","readPrefix","prefix","readTheHeader","readSequenceItemsExplicit","readDicomDataSetExplicitUndefinedLength","readSequenceItemExplicit","item","readSQElementUndefinedLengthExplicit","items","readSQElementKnownLengthExplicit","readSequenceItemsImplicit","readDicomDataSetImplicitUndefinedLength","readSequenceItemImplicit","readSQElementUndefinedLengthImplicit","readSQElementKnownLengthImplicit","readSequenceItem","readTag","sharedCopy","byteOffset","createJPEGBasicOffsetTable","isEndOfImageMarker","isFragmentEndOfImage","fragmentIndex","fragment","findLastImageFrameFragmentIndex","endFragmentIndex","explicitDataSetToJS","util","omitPrivateAttibutes","maxElementLength","isPrivateTag","sequenceItems","asString","explicitElementToString","textResult","multiElementToString","numItems","func","call","isStringVr","num","toUpperCase","uint16","double","float","parseDA","daysInMonth","m","y","isValidDate","d","isNaN","date","validate","yyyy","substring","mm","dd","year","month","day","parseTM","time","hh","ss","ffffff","hours","minutes","seconds","fractionalSeconds","stringVrs","AE","AS","AT","CS","DA","DS","DT","FL","FD","IS","LO","LT","OB","OD","OF","OW","PN","SH","SL","SQ","SS","ST","TM","UI","UL","UN","UR","US","UT","lastGroupDigit","groupIsOdd","parsePN","personName","stringValues","familyName","givenName","middleName","suffix"],"mappings":"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","file":"dicomParser.node.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"dicom-parser\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dicom-parser\"] = factory();\n\telse\n\t\troot[\"dicomParser\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","/**\n * Creates a new byteArray of the same type (Uint8Array or Buffer) of the specified length.\n * @param byteArray the underlying byteArray (either Uint8Array or Buffer)\n * @param length number of bytes of the Byte Array\n * @returns {object} Uint8Array or Buffer depending on the type of byteArray\n */\nexport default function alloc (byteArray, length) {\n  if (typeof Buffer !== 'undefined' && byteArray instanceof Buffer) {\n    return Buffer.alloc(length);\n  } else if (byteArray instanceof Uint8Array) {\n    return new Uint8Array(length);\n  }\n  throw 'dicomParser.alloc: unknown type for byteArray';\n}\n","/**\n * Internal helper functions for parsing different types from a big-endian byte array\n */\nexport default {\n\n  /**\n     *\n     * Parses an unsigned int 16 from a big-endian byte array\n     *\n     * @param byteArray the byte array to read from\n     * @param position the position in the byte array to read from\n     * @returns {*} the parsed unsigned int 16\n     * @throws error if buffer overread would occur\n     * @access private\n     */\n  readUint16 (byteArray, position) {\n    if (position < 0) {\n      throw 'bigEndianByteArrayParser.readUint16: position cannot be less than 0';\n    }\n    if (position + 2 > byteArray.length) {\n      throw 'bigEndianByteArrayParser.readUint16: attempt to read past end of buffer';\n    }\n\n    return (byteArray[position] << 8) + byteArray[position + 1];\n  },\n\n  /**\n     *\n     * Parses a signed int 16 from a big-endian byte array\n     *\n     * @param byteArray the byte array to read from\n     * @param position the position in the byte array to read from\n     * @returns {*} the parsed signed int 16\n     * @throws error if buffer overread would occur\n     * @access private\n     */\n  readInt16 (byteArray, position) {\n    if (position < 0) {\n      throw 'bigEndianByteArrayParser.readInt16: position cannot be less than 0';\n    }\n    if (position + 2 > byteArray.length) {\n      throw 'bigEndianByteArrayParser.readInt16: attempt to read past end of buffer';\n    }\n    var int16 = (byteArray[position] << 8) + byteArray[position + 1];\n    // fix sign\n\n    if (int16 & 0x8000) {\n      int16 = int16 - 0xFFFF - 1;\n    }\n\n    return int16;\n  },\n\n  /**\n     * Parses an unsigned int 32 from a big-endian byte array\n     *\n     * @param byteArray the byte array to read from\n     * @param position the position in the byte array to read from\n     * @returns {*} the parsed unsigned int 32\n     * @throws error if buffer overread would occur\n     * @access private\n     */\n  readUint32 (byteArray, position) {\n    if (position < 0) {\n      throw 'bigEndianByteArrayParser.readUint32: position cannot be less than 0';\n    }\n\n    if (position + 4 > byteArray.length) {\n      throw 'bigEndianByteArrayParser.readUint32: attempt to read past end of buffer';\n    }\n\n    var uint32 = (256 * (256 * (256 * byteArray[position] +\n                                          byteArray[position + 1]) +\n                                          byteArray[position + 2]) +\n                                          byteArray[position + 3]);\n\n    return uint32;\n  },\n\n  /**\n     * Parses a signed int 32 from a big-endian byte array\n     *\n     * @param byteArray the byte array to read from\n     * @param position the position in the byte array to read from\n     * @returns {*} the parsed signed int 32\n     * @throws error if buffer overread would occur\n     * @access private\n     */\n  readInt32 (byteArray, position) {\n    if (position < 0) {\n      throw 'bigEndianByteArrayParser.readInt32: position cannot be less than 0';\n    }\n\n    if (position + 4 > byteArray.length) {\n      throw 'bigEndianByteArrayParser.readInt32: attempt to read past end of buffer';\n    }\n\n    var int32 = ((byteArray[position] << 24) +\n                     (byteArray[position + 1] << 16) +\n                     (byteArray[position + 2] << 8) +\n                      byteArray[position + 3]);\n\n    return int32;\n  },\n\n  /**\n     * Parses 32-bit float from a big-endian byte array\n     *\n     * @param byteArray the byte array to read from\n     * @param position the position in the byte array to read from\n     * @returns {*} the parsed 32-bit float\n     * @throws error if buffer overread would occur\n     * @access private\n     */\n  readFloat (byteArray, position) {\n    if (position < 0) {\n      throw 'bigEndianByteArrayParser.readFloat: position cannot be less than 0';\n    }\n\n    if (position + 4 > byteArray.length) {\n      throw 'bigEndianByteArrayParser.readFloat: attempt to read past end of buffer';\n    }\n\n    // I am sure there is a better way than this but this should be safe\n    var byteArrayForParsingFloat = new Uint8Array(4);\n\n    byteArrayForParsingFloat[3] = byteArray[position];\n    byteArrayForParsingFloat[2] = byteArray[position + 1];\n    byteArrayForParsingFloat[1] = byteArray[position + 2];\n    byteArrayForParsingFloat[0] = byteArray[position + 3];\n    var floatArray = new Float32Array(byteArrayForParsingFloat.buffer);\n\n\n    return floatArray[0];\n  },\n\n  /**\n     * Parses 64-bit float from a big-endian byte array\n     *\n     * @param byteArray the byte array to read from\n     * @param position the position in the byte array to read from\n     * @returns {*} the parsed 64-bit float\n     * @throws error if buffer overread would occur\n     * @access private\n     */\n  readDouble (byteArray, position) {\n    if (position < 0) {\n      throw 'bigEndianByteArrayParser.readDouble: position cannot be less than 0';\n    }\n\n    if (position + 8 > byteArray.length) {\n      throw 'bigEndianByteArrayParser.readDouble: attempt to read past end of buffer';\n    }\n\n    // I am sure there is a better way than this but this should be safe\n    var byteArrayForParsingFloat = new Uint8Array(8);\n\n    byteArrayForParsingFloat[7] = byteArray[position];\n    byteArrayForParsingFloat[6] = byteArray[position + 1];\n    byteArrayForParsingFloat[5] = byteArray[position + 2];\n    byteArrayForParsingFloat[4] = byteArray[position + 3];\n    byteArrayForParsingFloat[3] = byteArray[position + 4];\n    byteArrayForParsingFloat[2] = byteArray[position + 5];\n    byteArrayForParsingFloat[1] = byteArray[position + 6];\n    byteArrayForParsingFloat[0] = byteArray[position + 7];\n    var floatArray = new Float64Array(byteArrayForParsingFloat.buffer);\n\n\n    return floatArray[0];\n  }\n};\n","/**\n * Internal helper functions common to parsing byte arrays of any type\n */\n\n/**\n * Reads a string of 8-bit characters from an array of bytes and advances\n * the position by length bytes.  A null terminator will end the string\n * but will not effect advancement of the position.  Trailing and leading\n * spaces are preserved (not trimmed)\n * @param byteArray the byteArray to read from\n * @param position the position in the byte array to read from\n * @param length the maximum number of bytes to parse\n * @returns {string} the parsed string\n * @throws error if buffer overread would occur\n * @access private\n */\nexport function readFixedString (byteArray, position, length) {\n  if (length < 0) {\n    throw 'dicomParser.readFixedString - length cannot be less than 0';\n  }\n\n  if (position + length > byteArray.length) {\n    throw 'dicomParser.readFixedString: attempt to read past end of buffer';\n  }\n\n  var result = '';\n  var byte;\n\n  for (var i = 0; i < length; i++) {\n    byte = byteArray[position + i];\n    if (byte === 0) {\n      position += length;\n\n      return result;\n    }\n    result += String.fromCharCode(byte);\n  }\n\n  return result;\n}\n","import sharedCopy from './sharedCopy.js';\nimport { readFixedString } from './byteArrayParser.js';\n\n/**\n *\n * Internal helper class to assist with parsing. Supports reading from a byte\n * stream contained in a Uint8Array.  Example usage:\n *\n *  var byteArray = new Uint8Array(32);\n *  var byteStream = new dicomParser.ByteStream(dicomParser.littleEndianByteArrayParser, byteArray);\n *\n * */\n\n/**\n * Constructor for ByteStream objects.\n * @param byteArrayParser a parser for parsing the byte array\n * @param byteArray a Uint8Array containing the byte stream\n * @param position (optional) the position to start reading from.  0 if not specified\n * @constructor\n * @throws will throw an error if the byteArrayParser parameter is not present\n * @throws will throw an error if the byteArray parameter is not present or invalid\n * @throws will throw an error if the position parameter is not inside the byte array\n */\nexport default class ByteStream {\n  constructor (byteArrayParser, byteArray, position) {\n    if (byteArrayParser === undefined) {\n      throw 'dicomParser.ByteStream: missing required parameter \\'byteArrayParser\\'';\n    }\n    if (byteArray === undefined) {\n      throw 'dicomParser.ByteStream: missing required parameter \\'byteArray\\'';\n    }\n    if ((byteArray instanceof Uint8Array) === false &&\n          (byteArray instanceof Buffer) === false) {\n      throw 'dicomParser.ByteStream: parameter byteArray is not of type Uint8Array or Buffer';\n    }\n    if (position < 0) {\n      throw 'dicomParser.ByteStream: parameter \\'position\\' cannot be less than 0';\n    }\n    if (position >= byteArray.length) {\n      throw 'dicomParser.ByteStream: parameter \\'position\\' cannot be greater than or equal to \\'byteArray\\' length';\n    }\n    this.byteArrayParser = byteArrayParser;\n    this.byteArray = byteArray;\n    this.position = position ? position : 0;\n    this.warnings = []; // array of string warnings encountered while parsing\n  }\n\n  /**\n     * Safely seeks through the byte stream.  Will throw an exception if an attempt\n     * is made to seek outside of the byte array.\n     * @param offset the number of bytes to add to the position\n     * @throws error if seek would cause position to be outside of the byteArray\n     */\n  seek (offset) {\n    if (this.position + offset < 0) {\n      throw 'dicomParser.ByteStream.prototype.seek: cannot seek to position < 0';\n    }\n    this.position += offset;\n  }\n\n  /**\n     * Returns a new ByteStream object from the current position and of the requested number of bytes\n     * @param numBytes the length of the byte array for the ByteStream to contain\n     * @returns {dicomParser.ByteStream}\n     * @throws error if buffer overread would occur\n     */\n  readByteStream (numBytes) {\n    if (this.position + numBytes > this.byteArray.length) {\n      throw 'dicomParser.ByteStream.prototype.readByteStream: readByteStream - buffer overread';\n    }\n    var byteArrayView = sharedCopy(this.byteArray, this.position, numBytes);\n\n    this.position += numBytes;\n\n    return new ByteStream(this.byteArrayParser, byteArrayView);\n  }\n\n  /**\n     *\n     * Parses an unsigned int 16 from a byte array and advances\n     * the position by 2 bytes\n     *\n     * @returns {*} the parsed unsigned int 16\n     * @throws error if buffer overread would occur\n     */\n  readUint16 () {\n    var result = this.byteArrayParser.readUint16(this.byteArray, this.position);\n\n    this.position += 2;\n\n    return result;\n  }\n\n  /**\n     * Parses an unsigned int 32 from a byte array and advances\n     * the position by 2 bytes\n     *\n     * @returns {*} the parse unsigned int 32\n     * @throws error if buffer overread would occur\n     */\n  readUint32 () {\n    var result = this.byteArrayParser.readUint32(this.byteArray, this.position);\n\n    this.position += 4;\n\n    return result;\n  }\n\n  /**\n     * Reads a string of 8-bit characters from an array of bytes and advances\n     * the position by length bytes.  A null terminator will end the string\n     * but will not effect advancement of the position.\n     * @param length the maximum number of bytes to parse\n     * @returns {string} the parsed string\n     * @throws error if buffer overread would occur\n     */\n  readFixedString (length) {\n    var result = readFixedString(this.byteArray, this.position, length);\n\n    this.position += length;\n\n    return result;\n  }\n}\n","import { readFixedString } from './byteArrayParser.js';\n\n/**\n *\n * The DataSet class encapsulates a collection of DICOM Elements and provides various functions\n * to access the data in those elements\n *\n * Rules for handling padded spaces:\n * DS = Strip leading and trailing spaces\n * DT = Strip trailing spaces\n * IS = Strip leading and trailing spaces\n * PN = Strip trailing spaces\n * TM = Strip trailing spaces\n * AE = Strip leading and trailing spaces\n * CS = Strip leading and trailing spaces\n * SH = Strip leading and trailing spaces\n * LO = Strip leading and trailing spaces\n * LT = Strip trailing spaces\n * ST = Strip trailing spaces\n * UT = Strip trailing spaces\n *\n */\n\nfunction getByteArrayParser (element, defaultParser) {\n  return (element.parser !== undefined ? element.parser : defaultParser);\n}\n\n/**\n * Constructs a new DataSet given byteArray and collection of elements\n * @param byteArrayParser\n * @param byteArray\n * @param elements\n * @constructor\n */\nexport default class DataSet {\n  constructor (byteArrayParser, byteArray, elements) {\n    this.byteArrayParser = byteArrayParser;\n    this.byteArray = byteArray;\n    this.elements = elements;\n  }\n\n  /**\n     * Finds the element for tag and returns an unsigned int 16 if it exists and has data\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied\n     * @returns {*} unsigned int 16 or undefined if the attribute is not present or has data of length 0\n     */\n  uint16 (tag, index) {\n    var element = this.elements[tag];\n\n    index = (index !== undefined) ? index : 0;\n    if (element && element.length !== 0) {\n      return getByteArrayParser(element, this.byteArrayParser).readUint16(this.byteArray, element.dataOffset + (index * 2));\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Finds the element for tag and returns an signed int 16 if it exists and has data\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied\n     * @returns {*} signed int 16 or undefined if the attribute is not present or has data of length 0\n     */\n  int16 (tag, index) {\n    var element = this.elements[tag];\n\n    index = (index !== undefined) ? index : 0;\n    if (element && element.length !== 0) {\n      return getByteArrayParser(element, this.byteArrayParser).readInt16(this.byteArray, element.dataOffset + (index * 2));\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Finds the element for tag and returns an unsigned int 32 if it exists and has data\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied\n     * @returns {*} unsigned int 32 or undefined if the attribute is not present or has data of length 0\n     */\n  uint32 (tag, index) {\n    var element = this.elements[tag];\n\n    index = (index !== undefined) ? index : 0;\n    if (element && element.length !== 0) {\n      return getByteArrayParser(element, this.byteArrayParser).readUint32(this.byteArray, element.dataOffset + (index * 4));\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Finds the element for tag and returns an signed int 32 if it exists and has data\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied\n     * @returns {*} signed int 32 or undefined if the attribute is not present or has data of length 0\n     */\n  int32 (tag, index) {\n    var element = this.elements[tag];\n\n    index = (index !== undefined) ? index : 0;\n    if (element && element.length !== 0) {\n      return getByteArrayParser(element, this.byteArrayParser).readInt32(this.byteArray, element.dataOffset + (index * 4));\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Finds the element for tag and returns a 32 bit floating point number (VR=FL) if it exists and has data\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied\n     * @returns {*} float or undefined if the attribute is not present or has data of length 0\n     */\n  float (tag, index) {\n    var element = this.elements[tag];\n\n    index = (index !== undefined) ? index : 0;\n    if (element && element.length !== 0) {\n      return getByteArrayParser(element, this.byteArrayParser).readFloat(this.byteArray, element.dataOffset + (index * 4));\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Finds the element for tag and returns a 64 bit floating point number (VR=FD) if it exists and has data\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied\n     * @returns {*} float or undefined if the attribute is not present or doesn't has data of length 0\n     */\n  double (tag, index) {\n    var element = this.elements[tag];\n\n    index = (index !== undefined) ? index : 0;\n    if (element && element.length !== 0) {\n      return getByteArrayParser(element, this.byteArrayParser).readDouble(this.byteArray, element.dataOffset + (index * 8));\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Returns the number of string values for the element\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @returns {*} the number of string values or undefined if the attribute is not present or has zero length data\n     */\n  numStringValues (tag) {\n    var element = this.elements[tag];\n\n    if (element && element.length > 0) {\n      var fixedString = readFixedString(this.byteArray, element.dataOffset, element.length);\n      var numMatching = fixedString.match(/\\\\/g);\n\n      if (numMatching === null) {\n        return 1;\n      }\n\n      return numMatching.length + 1;\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Returns a string for the element.  If index is provided, the element is assumed to be\n     * multi-valued and will return the component specified by index.  Undefined is returned\n     * if there is no component with the specified index, the element does not exist or is zero length.\n     *\n     * Use this function for VR types of AE, CS, SH and LO\n     *\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the desired value in a multi valued string or undefined for the entire string\n     * @returns {*}\n     */\n  string (tag, index) {\n    var element = this.elements[tag];\n\n    if (element && element.length > 0) {\n      var fixedString = readFixedString(this.byteArray, element.dataOffset, element.length);\n\n      if (index >= 0) {\n        var values = fixedString.split('\\\\');\n        // trim trailing spaces\n\n        return values[index].trim();\n      }\n      // trim trailing spaces\n      return fixedString.trim();\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Returns a string with the leading spaces preserved and trailing spaces removed.\n     *\n     * Use this function to access data for VRs of type UT, ST and LT\n     *\n     * @param tag\n     * @param index\n     * @returns {*}\n     */\n  text (tag, index) {\n    var element = this.elements[tag];\n\n    if (element && element.length > 0) {\n      var fixedString = readFixedString(this.byteArray, element.dataOffset, element.length);\n\n      if (index >= 0) {\n        var values = fixedString.split('\\\\');\n\n\n        return values[index].replace(/ +$/, '');\n      }\n\n      return fixedString.replace(/ +$/, '');\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Parses a string to a float for the specified index in a multi-valued element.  If index is not specified,\n     * the first value in a multi-valued VR will be parsed if present.\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the desired value in a multi valued string or undefined for the first value\n     * @returns {*} a floating point number or undefined if not present or data not long enough\n     */\n  floatString (tag, index) {\n    var element = this.elements[tag];\n\n    if (element && element.length > 0) {\n      index = (index !== undefined) ? index : 0;\n      var value = this.string(tag, index);\n\n      if (value !== undefined) {\n        return parseFloat(value);\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Parses a string to an integer for the specified index in a multi-valued element.  If index is not specified,\n     * the first value in a multi-valued VR will be parsed if present.\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the desired value in a multi valued string or undefined for the first value\n     * @returns {*} an integer or undefined if not present or data not long enough\n     */\n  intString (tag, index) {\n    var element = this.elements[tag];\n\n    if (element && element.length > 0) {\n      index = (index !== undefined) ? index : 0;\n      var value = this.string(tag, index);\n\n      if (value !== undefined) {\n        return parseInt(value);\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Parses an element tag according to the 'AT' VR definition (VR=AT).\n     * @param {String} A DICOM tag with in the format xGGGGEEEE.\n     * @returns {String} A string representation of a data element tag or undefined if the field is not present or data is not long enough.\n     */\n  attributeTag (tag) {\n    const element = this.elements[tag];\n\n    if (element && element.length === 4) {\n      const parser = getByteArrayParser(element, this.byteArrayParser).readUint16;\n      const bytes = this.byteArray;\n      const offset = element.dataOffset;\n\n      return `x${(`00000000${(parser(bytes, offset) * 256 * 256 + parser(bytes, offset + 2)).toString(16)}`).substr(-8)}`;\n    }\n\n    return undefined;\n  }\n}\n","/**\n * Internal helper functions for parsing DICOM elements\n */\n\n/**\n * reads from the byte stream until it finds the magic number for the Sequence Delimitation\n * Item item and then sets the length of the element\n * @param byteStream\n * @param element\n */\nexport default function findAndSetUNElementLength (byteStream, element) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.findAndSetUNElementLength: missing required parameter \\'byteStream\\'';\n  }\n\n  // group, element, length\n  const itemDelimitationItemLength = 8;\n  const maxPosition = byteStream.byteArray.length - itemDelimitationItemLength;\n\n  while (byteStream.position <= maxPosition) {\n    const groupNumber = byteStream.readUint16();\n\n    if (groupNumber === 0xfffe) {\n      const elementNumber = byteStream.readUint16();\n\n      if (elementNumber === 0xe0dd) {\n        // NOTE: It would be better to also check for the length to be 0 as part of the check above\n        // but we will just log a warning for now\n        const itemDelimiterLength = byteStream.readUint32();\n\n        if (itemDelimiterLength !== 0) {\n          byteStream.warnings(`encountered non zero length following item delimiter at position ${byteStream.position - 4} while reading element of undefined length with tag ${element.tag}`);\n        }\n        element.length = byteStream.position - element.dataOffset;\n\n        return;\n      }\n    }\n  }\n\n  // No item delimitation item - silently set the length to the end\n  // of the buffer and set the position past the end of the buffer\n  element.length = byteStream.byteArray.length - element.dataOffset;\n  byteStream.seek(byteStream.byteArray.length - byteStream.position);\n}\n","import readTag from './readTag.js';\n\n/**\n * Internal helper functions for parsing DICOM elements\n */\n\n/**\n * Reads an encapsulated pixel data element and adds an array of fragments to the element\n * containing the offset and length of each fragment and any offsets from the basic offset\n * table\n * @param byteStream\n * @param element\n */\nexport default function findEndOfEncapsulatedElement (byteStream, element, warnings) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.findEndOfEncapsulatedElement: missing required parameter \\'byteStream\\'';\n  }\n\n  if (element === undefined) {\n    throw 'dicomParser.findEndOfEncapsulatedElement: missing required parameter \\'element\\'';\n  }\n\n  element.encapsulatedPixelData = true;\n  element.basicOffsetTable = [];\n  element.fragments = [];\n\n  const basicOffsetTableItemTag = readTag(byteStream);\n\n  if (basicOffsetTableItemTag !== 'xfffee000') {\n    throw 'dicomParser.findEndOfEncapsulatedElement: basic offset table not found';\n  }\n\n  const basicOffsetTableItemlength = byteStream.readUint32();\n  const numFragments = basicOffsetTableItemlength / 4;\n\n  for (let i = 0; i < numFragments; i++) {\n    const offset = byteStream.readUint32();\n\n    element.basicOffsetTable.push(offset);\n  }\n\n  const baseOffset = byteStream.position;\n\n  while (byteStream.position < byteStream.byteArray.length) {\n    const tag = readTag(byteStream);\n    let length = byteStream.readUint32();\n\n    if (tag === 'xfffee0dd') {\n      byteStream.seek(length);\n      element.length = byteStream.position - element.dataOffset;\n\n      return;\n    } else if (tag === 'xfffee000') {\n      element.fragments.push({\n        offset: byteStream.position - baseOffset - 8,\n        position: byteStream.position,\n        length\n      });\n    } else {\n      if (warnings) {\n        warnings.push(`unexpected tag ${tag} while searching for end of pixel data element with undefined length`);\n      }\n\n      if (length > byteStream.byteArray.length - byteStream.position) {\n        // fix length\n        length = byteStream.byteArray.length - byteStream.position;\n      }\n\n      element.fragments.push({\n        offset: byteStream.position - baseOffset - 8,\n        position: byteStream.position,\n        length\n      });\n\n      byteStream.seek(length);\n      element.length = byteStream.position - element.dataOffset;\n\n      return;\n    }\n\n    byteStream.seek(length);\n  }\n\n  if (warnings) {\n    warnings.push(`pixel data element ${element.tag} missing sequence delimiter tag xfffee0dd`);\n  }\n}\n","/**\n * Internal helper functions for parsing DICOM elements\n */\n\n/**\n * reads from the byte stream until it finds the magic numbers for the item delimitation item\n * and then sets the length of the element\n * @param byteStream\n * @param element\n */\nexport default function findItemDelimitationItemAndSetElementLength (byteStream, element) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.readDicomElementImplicit: missing required parameter \\'byteStream\\'';\n  }\n\n  const itemDelimitationItemLength = 8; // group, element, length\n  const maxPosition = byteStream.byteArray.length - itemDelimitationItemLength;\n\n  while (byteStream.position <= maxPosition) {\n    const groupNumber = byteStream.readUint16();\n\n    if (groupNumber === 0xfffe) {\n      const elementNumber = byteStream.readUint16();\n\n      if (elementNumber === 0xe00d) {\n        // NOTE: It would be better to also check for the length to be 0 as part of the check above\n        // but we will just log a warning for now\n        const itemDelimiterLength = byteStream.readUint32(); // the length\n\n        if (itemDelimiterLength !== 0) {\n          byteStream.warnings(`encountered non zero length following item delimiter at position ${byteStream.position - 4} while reading element of undefined length with tag ${element.tag}`);\n        }\n\n        element.length = byteStream.position - element.dataOffset;\n\n        return;\n      }\n    }\n  }\n\n  // No item delimitation item - silently set the length to the end of the buffer and set the position past the end of the buffer\n  element.length = byteStream.byteArray.length - element.dataOffset;\n  byteStream.seek(byteStream.byteArray.length - byteStream.position);\n}\n","export * from './util/index.js';\nexport * from './parseDicomDataSet.js';\nexport * from './byteArrayParser.js';\n\nexport { default as alloc } from './alloc.js';\nexport { default as version } from './version.js';\nexport { default as bigEndianByteArrayParser } from './bigEndianByteArrayParser.js';\nexport { default as ByteStream } from './byteStream.js';\nexport { default as sharedCopy } from './sharedCopy.js';\nexport { default as DataSet } from './dataSet.js';\nexport { default as findAndSetUNElementLength } from './findAndSetUNElementLength.js';\nexport { default as findEndOfEncapsulatedElement } from './findEndOfEncapsulatedPixelData.js';\nexport { default as findItemDelimitationItemAndSetElementLength } from './findItemDelimitationItem.js';\nexport { default as littleEndianByteArrayParser } from './littleEndianByteArrayParser.js';\nexport { default as parseDicom } from './parseDicom.js';\nexport { default as readDicomElementExplicit } from './readDicomElementExplicit.js';\nexport { default as readDicomElementImplicit } from './readDicomElementImplicit.js';\nexport { default as readEncapsulatedImageFrame } from './readEncapsulatedImageFrame.js';\nexport { default as readEncapsulatedPixelData } from './readEncapsulatedPixelData.js';\nexport { default as readEncapsulatedPixelDataFromFragments } from './readEncapsulatedPixelDataFromFragments.js';\nexport { default as readPart10Header } from './readPart10Header.js';\nexport { default as readSequenceItemsExplicit } from './readSequenceElementExplicit.js';\nexport { default as readSequenceItemsImplicit } from './readSequenceElementImplicit.js';\nexport { default as readSequenceItem } from './readSequenceItem.js';\nexport { default as readTag } from './readTag.js';\n","/**\n * Internal helper functions for parsing different types from a little-endian byte array\n */\n\nexport default {\n\n  /**\n   *\n   * Parses an unsigned int 16 from a little-endian byte array\n   *\n   * @param byteArray the byte array to read from\n   * @param position the position in the byte array to read from\n   * @returns {*} the parsed unsigned int 16\n   * @throws error if buffer overread would occur\n   * @access private\n   */\n  readUint16 (byteArray, position) {\n    if (position < 0) {\n      throw 'littleEndianByteArrayParser.readUint16: position cannot be less than 0';\n    }\n\n    if (position + 2 > byteArray.length) {\n      throw 'littleEndianByteArrayParser.readUint16: attempt to read past end of buffer';\n    }\n\n    return byteArray[position] + (byteArray[position + 1] * 256);\n  },\n\n  /**\n   *\n   * Parses a signed int 16 from a little-endian byte array\n   *\n   * @param byteArray the byte array to read from\n   * @param position the position in the byte array to read from\n   * @returns {*} the parsed signed int 16\n   * @throws error if buffer overread would occur\n   * @access private\n   */\n  readInt16 (byteArray, position) {\n    if (position < 0) {\n      throw 'littleEndianByteArrayParser.readInt16: position cannot be less than 0';\n    }\n    if (position + 2 > byteArray.length) {\n      throw 'littleEndianByteArrayParser.readInt16: attempt to read past end of buffer';\n    }\n\n    let int16 = byteArray[position] + (byteArray[position + 1] << 8);\n\n    // fix sign\n    if (int16 & 0x8000) {\n      int16 = int16 - 0xFFFF - 1;\n    }\n\n    return int16;\n  },\n\n\n  /**\n   * Parses an unsigned int 32 from a little-endian byte array\n   *\n   * @param byteArray the byte array to read from\n   * @param position the position in the byte array to read from\n   * @returns {*} the parsed unsigned int 32\n   * @throws error if buffer overread would occur\n   * @access private\n   */\n  readUint32 (byteArray, position) {\n    if (position < 0) {\n      throw 'littleEndianByteArrayParser.readUint32: position cannot be less than 0';\n    }\n\n    if (position + 4 > byteArray.length) {\n      throw 'littleEndianByteArrayParser.readUint32: attempt to read past end of buffer';\n    }\n\n    return (byteArray[position] +\n           (byteArray[position + 1] * 256) +\n           (byteArray[position + 2] * 256 * 256) +\n           (byteArray[position + 3] * 256 * 256 * 256));\n  },\n\n  /**\n * Parses a signed int 32 from a little-endian byte array\n *\n * @param byteArray the byte array to read from\n * @param position the position in the byte array to read from\n   * @returns {*} the parsed unsigned int 32\n   * @throws error if buffer overread would occur\n   * @access private\n   */\n  readInt32 (byteArray, position) {\n    if (position < 0) {\n      throw 'littleEndianByteArrayParser.readInt32: position cannot be less than 0';\n    }\n\n    if (position + 4 > byteArray.length) {\n      throw 'littleEndianByteArrayParser.readInt32: attempt to read past end of buffer';\n    }\n\n    return (byteArray[position] +\n           (byteArray[position + 1] << 8) +\n           (byteArray[position + 2] << 16) +\n           (byteArray[position + 3] << 24));\n  },\n\n  /**\n   * Parses 32-bit float from a little-endian byte array\n   *\n   * @param byteArray the byte array to read from\n   * @param position the position in the byte array to read from\n   * @returns {*} the parsed 32-bit float\n   * @throws error if buffer overread would occur\n   * @access private\n   */\n  readFloat (byteArray, position) {\n    if (position < 0) {\n      throw 'littleEndianByteArrayParser.readFloat: position cannot be less than 0';\n    }\n\n    if (position + 4 > byteArray.length) {\n      throw 'littleEndianByteArrayParser.readFloat: attempt to read past end of buffer';\n    }\n\n    // I am sure there is a better way than this but this should be safe\n    const byteArrayForParsingFloat = new Uint8Array(4);\n\n    byteArrayForParsingFloat[0] = byteArray[position];\n    byteArrayForParsingFloat[1] = byteArray[position + 1];\n    byteArrayForParsingFloat[2] = byteArray[position + 2];\n    byteArrayForParsingFloat[3] = byteArray[position + 3];\n\n    const floatArray = new Float32Array(byteArrayForParsingFloat.buffer);\n\n    return floatArray[0];\n  },\n\n  /**\n   * Parses 64-bit float from a little-endian byte array\n   *\n   * @param byteArray the byte array to read from\n   * @param position the position in the byte array to read from\n   * @returns {*} the parsed 64-bit float\n   * @throws error if buffer overread would occur\n   * @access private\n   */\n  readDouble (byteArray, position) {\n    if (position < 0) {\n      throw 'littleEndianByteArrayParser.readDouble: position cannot be less than 0';\n    }\n\n    if (position + 8 > byteArray.length) {\n      throw 'littleEndianByteArrayParser.readDouble: attempt to read past end of buffer';\n    }\n\n    // I am sure there is a better way than this but this should be safe\n    const byteArrayForParsingFloat = new Uint8Array(8);\n\n    byteArrayForParsingFloat[0] = byteArray[position];\n    byteArrayForParsingFloat[1] = byteArray[position + 1];\n    byteArrayForParsingFloat[2] = byteArray[position + 2];\n    byteArrayForParsingFloat[3] = byteArray[position + 3];\n    byteArrayForParsingFloat[4] = byteArray[position + 4];\n    byteArrayForParsingFloat[5] = byteArray[position + 5];\n    byteArrayForParsingFloat[6] = byteArray[position + 6];\n    byteArrayForParsingFloat[7] = byteArray[position + 7];\n\n    const floatArray = new Float64Array(byteArrayForParsingFloat.buffer);\n\n    return floatArray[0];\n  }\n};\n","import alloc from './alloc.js';\nimport bigEndianByteArrayParser from './bigEndianByteArrayParser.js';\nimport ByteStream from './byteStream.js';\nimport DataSet from './dataSet.js';\nimport littleEndianByteArrayParser from './littleEndianByteArrayParser.js';\nimport readPart10Header from './readPart10Header.js';\nimport sharedCopy from './sharedCopy.js';\nimport * as byteArrayParser from './byteArrayParser.js';\nimport * as parseDicomDataSet from './parseDicomDataSet.js';\n\n/**\n * Parses a DICOM P10 byte array and returns a DataSet object with the parsed elements.\n * If the options argument is supplied and it contains the untilTag property, parsing\n * will stop once that tag is encoutered.  This can be used to parse partial byte streams.\n *\n * @param byteArray the byte array\n * @param options object to control parsing behavior (optional)\n * @returns {DataSet}\n * @throws error if an error occurs while parsing.  The exception object will contain a\n *         property dataSet with the elements successfully parsed before the error.\n */\n\nexport default function parseDicom (byteArray, options) {\n  if (byteArray === undefined) {\n    throw 'dicomParser.parseDicom: missing required parameter \\'byteArray\\'';\n  }\n\n  function readTransferSyntax (metaHeaderDataSet) {\n    if (metaHeaderDataSet.elements.x00020010 === undefined) {\n      throw 'dicomParser.parseDicom: missing required meta header attribute 0002,0010';\n    }\n\n    const transferSyntaxElement = metaHeaderDataSet.elements.x00020010;\n\n    return byteArrayParser.readFixedString(byteArray, transferSyntaxElement.dataOffset, transferSyntaxElement.length);\n  }\n\n  function isExplicit (transferSyntax) {\n    // implicit little endian\n    if (transferSyntax === '1.2.840.10008.1.2') {\n      return false;\n    }\n\n    // all other transfer syntaxes should be explicit\n    return true;\n  }\n\n  function getDataSetByteStream (transferSyntax, position) {\n    if (transferSyntax === '1.2.840.10008.1.2.1.99') {\n      // if an infalter callback is registered, use it\n      if (options && options.inflater) {\n        const fullByteArrayCallback = options.inflater(byteArray, position);\n\n        return new ByteStream(littleEndianByteArrayParser, fullByteArrayCallback, 0);\n      }\n      // if running on node, use the zlib library to inflate\n      // http://stackoverflow.com/questions/4224606/how-to-check-whether-a-script-is-running-under-node-js\n      else if (typeof module !== 'undefined' && this.module !== module) {\n        // inflate it\n        const zlib = require('zlib');\n        const deflatedBuffer = sharedCopy(byteArray, position, byteArray.length - position);\n        const inflatedBuffer = zlib.inflateRawSync(deflatedBuffer);\n\n        // create a single byte array with the full header bytes and the inflated bytes\n        const fullByteArrayBuffer = alloc(byteArray, inflatedBuffer.length + position);\n\n        byteArray.copy(fullByteArrayBuffer, 0, 0, position);\n        inflatedBuffer.copy(fullByteArrayBuffer, position);\n\n        return new ByteStream(littleEndianByteArrayParser, fullByteArrayBuffer, 0);\n      }\n      // if pako is defined - use it.  This is the web browser path\n      // https://github.com/nodeca/pako\n      else if (typeof pako !== 'undefined') {\n        // inflate it\n        const deflated = byteArray.slice(position);\n        const inflated = pako.inflateRaw(deflated);\n\n        // create a single byte array with the full header bytes and the inflated bytes\n        const fullByteArray = alloc(byteArray, inflated.length + position);\n\n        fullByteArray.set(byteArray.slice(0, position), 0);\n        fullByteArray.set(inflated, position);\n\n        return new ByteStream(littleEndianByteArrayParser, fullByteArray, 0);\n      }\n\n      // throw exception since no inflater is available\n      throw 'dicomParser.parseDicom: no inflater available to handle deflate transfer syntax';\n    }\n\n    // explicit big endian\n    if (transferSyntax === '1.2.840.10008.1.2.2') {\n      return new ByteStream(bigEndianByteArrayParser, byteArray, position);\n    }\n\n    // all other transfer syntaxes are little endian; only the pixel encoding differs\n    // make a new stream so the metaheader warnings don't come along for the ride\n    return new ByteStream(littleEndianByteArrayParser, byteArray, position);\n  }\n\n  function mergeDataSets (metaHeaderDataSet, instanceDataSet) {\n    for (const propertyName in metaHeaderDataSet.elements) {\n      if (metaHeaderDataSet.elements.hasOwnProperty(propertyName)) {\n        instanceDataSet.elements[propertyName] = metaHeaderDataSet.elements[propertyName];\n      }\n    }\n\n    if (metaHeaderDataSet.warnings !== undefined) {\n      instanceDataSet.warnings = metaHeaderDataSet.warnings.concat(instanceDataSet.warnings);\n    }\n\n    return instanceDataSet;\n  }\n\n  function readDataSet (metaHeaderDataSet) {\n    const transferSyntax = readTransferSyntax(metaHeaderDataSet);\n    const explicit = isExplicit(transferSyntax);\n    const dataSetByteStream = getDataSetByteStream(transferSyntax, metaHeaderDataSet.position);\n\n    const elements = {};\n    const dataSet = new DataSet(dataSetByteStream.byteArrayParser, dataSetByteStream.byteArray, elements);\n\n    dataSet.warnings = dataSetByteStream.warnings;\n\n    try {\n      if (explicit) {\n        parseDicomDataSet.parseDicomDataSetExplicit(dataSet, dataSetByteStream, dataSetByteStream.byteArray.length, options);\n      } else {\n        parseDicomDataSet.parseDicomDataSetImplicit(dataSet, dataSetByteStream, dataSetByteStream.byteArray.length, options);\n      }\n    } catch (e) {\n      const ex = {\n        exception: e,\n        dataSet\n      };\n\n      throw ex;\n    }\n\n    return dataSet;\n  }\n\n  // main function here\n  function parseTheByteStream () {\n    const metaHeaderDataSet = readPart10Header(byteArray, options);\n    const dataSet = readDataSet(metaHeaderDataSet);\n\n    return mergeDataSets(metaHeaderDataSet, dataSet);\n  }\n\n  // This is where we actually start parsing\n  return parseTheByteStream();\n}\n","import readDicomElementExplicit from './readDicomElementExplicit.js';\nimport readDicomElementImplicit from './readDicomElementImplicit.js';\n\n/**\n * Internal helper functions for parsing implicit and explicit DICOM data sets\n */\n\n/**\n * reads an explicit data set\n * @param byteStream the byte stream to read from\n * @param maxPosition the maximum position to read up to (optional - only needed when reading sequence items)\n */\nexport function parseDicomDataSetExplicit (dataSet, byteStream, maxPosition, options = {}) {\n  maxPosition = (maxPosition === undefined) ? byteStream.byteArray.length : maxPosition;\n\n  if (byteStream === undefined) {\n    throw 'dicomParser.parseDicomDataSetExplicit: missing required parameter \\'byteStream\\'';\n  }\n\n  if (maxPosition < byteStream.position || maxPosition > byteStream.byteArray.length) {\n    throw 'dicomParser.parseDicomDataSetExplicit: invalid value for parameter \\'maxP osition\\'';\n  }\n\n  const elements = dataSet.elements;\n\n  while (byteStream.position < maxPosition) {\n    const element = readDicomElementExplicit(byteStream, dataSet.warnings, options.untilTag);\n\n    elements[element.tag] = element;\n    if (element.tag === options.untilTag) {\n      return;\n    }\n  }\n\n  if (byteStream.position > maxPosition) {\n    throw 'dicomParser:parseDicomDataSetExplicit: buffer overrun';\n  }\n}\n\n/**\n * reads an implicit data set\n * @param byteStream the byte stream to read from\n * @param maxPosition the maximum position to read up to (optional - only needed when reading sequence items)\n */\nexport function parseDicomDataSetImplicit (dataSet, byteStream, maxPosition, options = {}) {\n  maxPosition = (maxPosition === undefined) ? dataSet.byteArray.length : maxPosition;\n\n  if (byteStream === undefined) {\n    throw 'dicomParser.parseDicomDataSetImplicit: missing required parameter \\'byteStream\\'';\n  }\n\n  if (maxPosition < byteStream.position || maxPosition > byteStream.byteArray.length) {\n    throw 'dicomParser.parseDicomDataSetImplicit: invalid value for parameter \\'maxPosition\\'';\n  }\n\n  const elements = dataSet.elements;\n\n  while (byteStream.position < maxPosition) {\n    const element = readDicomElementImplicit(byteStream, options.untilTag, options.vrCallback);\n\n    elements[element.tag] = element;\n    if (element.tag === options.untilTag) {\n      return;\n    }\n  }\n}\n","import findEndOfEncapsulatedElement from './findEndOfEncapsulatedPixelData.js';\nimport findAndSetUNElementLength from './findAndSetUNElementLength.js';\nimport findItemDelimitationItemAndSetElementLength from './findItemDelimitationItem.js';\nimport readTag from './readTag.js';\nimport readSequenceItemsExplicit from './readSequenceElementExplicit.js';\n\n/**\n * Internal helper functions for for parsing DICOM elements\n */\n\nconst getDataLengthSizeInBytesForVR = (vr) => {\n  if (vr === 'OB' ||\n      vr === 'OW' ||\n      vr === 'SQ' ||\n      vr === 'OF' ||\n      vr === 'UT' ||\n      vr === 'UN') {\n    return 4;\n  }\n\n  return 2;\n};\n\nexport default function readDicomElementExplicit (byteStream, warnings, untilTag) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.readDicomElementExplicit: missing required parameter \\'byteStream\\'';\n  }\n\n  const element = {\n    tag: readTag(byteStream),\n    vr: byteStream.readFixedString(2)\n    // length set below based on VR\n    // dataOffset set below based on VR and size of length\n  };\n\n  const dataLengthSizeBytes = getDataLengthSizeInBytesForVR(element.vr);\n\n  if (dataLengthSizeBytes === 2) {\n    element.length = byteStream.readUint16();\n    element.dataOffset = byteStream.position;\n  } else {\n    byteStream.seek(2);\n    element.length = byteStream.readUint32();\n    element.dataOffset = byteStream.position;\n  }\n\n  if (element.length === 4294967295) {\n    element.hadUndefinedLength = true;\n  }\n\n  if (element.tag === untilTag) {\n    return element;\n  }\n\n  // if VR is SQ, parse the sequence items\n  if (element.vr === 'SQ') {\n    readSequenceItemsExplicit(byteStream, element, warnings);\n\n    return element;\n  }\n\n  if (element.length === 4294967295) {\n    if (element.tag === 'x7fe00010') {\n      findEndOfEncapsulatedElement(byteStream, element, warnings);\n\n      return element;\n    } else if (element.vr === 'UN') {\n      findAndSetUNElementLength(byteStream, element);\n\n      return element;\n    }\n\n    findItemDelimitationItemAndSetElementLength(byteStream, element);\n\n    return element;\n  }\n\n  byteStream.seek(element.length);\n\n  return element;\n}\n","import findItemDelimitationItemAndSetElementLength from './findItemDelimitationItem.js';\nimport readSequenceItemsImplicit from './readSequenceElementImplicit.js';\nimport readTag from './readTag.js';\n\n/**\n * Internal helper functions for for parsing DICOM elements\n */\n\nconst isSequence = (element, byteStream, vrCallback) => {\n  // if a data dictionary callback was provided, use that to verify that the element is a sequence.\n  if (typeof vrCallback !== 'undefined') {\n    return (vrCallback(element.tag) === 'SQ');\n  }\n\n  if ((byteStream.position + 4) <= byteStream.byteArray.length) {\n    const nextTag = readTag(byteStream);\n\n    byteStream.seek(-4);\n\n    // Item start tag (fffe,e000) or sequence delimiter (i.e. end of sequence) tag (0fffe,e0dd)\n    // These are the tags that could potentially be found directly after a sequence start tag (the delimiter\n    // is found in the case of an empty sequence). This is not 100% safe because a non-sequence item\n    // could have data that has these bytes, but this is how to do it without a data dictionary.\n    return (nextTag === 'xfffee000') || (nextTag === 'xfffee0dd');\n  }\n\n  byteStream.warnings.push('eof encountered before finding sequence item tag or sequence delimiter tag in peeking to determine VR');\n\n  return false;\n};\n\nexport default function readDicomElementImplicit (byteStream, untilTag, vrCallback) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.readDicomElementImplicit: missing required parameter \\'byteStream\\'';\n  }\n\n  const element = {\n    tag: readTag(byteStream),\n    length: byteStream.readUint32(),\n    dataOffset: byteStream.position\n  };\n\n  if (element.length === 4294967295) {\n    element.hadUndefinedLength = true;\n  }\n\n  if (element.tag === untilTag) {\n    return element;\n  }\n\n  if (isSequence(element, byteStream, vrCallback)) {\n    // parse the sequence\n    readSequenceItemsImplicit(byteStream, element);\n\n    return element;\n  }\n\n  // if element is not a sequence and has undefined length, we have to\n  // scan the data for a magic number to figure out when it ends.\n  if (element.hadUndefinedLength) {\n    findItemDelimitationItemAndSetElementLength(byteStream, element);\n\n    return element;\n  }\n\n  // non sequence element with known length, skip over the data part\n  byteStream.seek(element.length);\n\n  return element;\n}\n","import readEncapsulatedPixelDataFromFragments from './readEncapsulatedPixelDataFromFragments.js';\n\n/**\n * Functionality for extracting encapsulated pixel data\n */\n\nconst findFragmentIndexWithOffset = (fragments, offset) => {\n  for (let i = 0; i < fragments.length; i++) {\n    if (fragments[i].offset === offset) {\n      return i;\n    }\n  }\n};\n\nconst calculateNumberOfFragmentsForFrame = (frameIndex, basicOffsetTable, fragments, startFragmentIndex) => {\n  // special case for last frame\n  if (frameIndex === basicOffsetTable.length - 1) {\n    return fragments.length - startFragmentIndex;\n  }\n\n  // iterate through each fragment looking for the one matching the offset for the next frame\n  const nextFrameOffset = basicOffsetTable[frameIndex + 1];\n\n  for (let i = startFragmentIndex + 1; i < fragments.length; i++) {\n    if (fragments[i].offset === nextFrameOffset) {\n      return i - startFragmentIndex;\n    }\n  }\n\n  throw 'dicomParser.calculateNumberOfFragmentsForFrame: could not find fragment with offset matching basic offset table';\n};\n\n/**\n * Returns the pixel data for the specified frame in an encapsulated pixel data element that has a non\n * empty basic offset table.  Note that this function will fail if the basic offset table is empty - in that\n * case you need to determine which fragments map to which frames and read them using\n * readEncapsulatedPixelDataFromFragments().  Also see the function createJEPGBasicOffsetTable() to see\n * how a basic offset table can be created for JPEG images\n *\n * @param dataSet - the dataSet containing the encapsulated pixel data\n * @param pixelDataElement - the pixel data element (x7fe00010) to extract the frame from\n * @param frameIndex - the zero based frame index\n * @param [basicOffsetTable] - optional array of starting offsets for frames\n * @param [fragments] - optional array of objects describing each fragment (offset, position, length)\n * @returns {object} with the encapsulated pixel data\n */\nexport default function readEncapsulatedImageFrame (dataSet, pixelDataElement, frameIndex, basicOffsetTable, fragments) {\n  // default parameters\n  basicOffsetTable = basicOffsetTable || pixelDataElement.basicOffsetTable;\n  fragments = fragments || pixelDataElement.fragments;\n\n  // Validate parameters\n  if (dataSet === undefined) {\n    throw 'dicomParser.readEncapsulatedImageFrame: missing required parameter \\'dataSet\\'';\n  }\n  if (pixelDataElement === undefined) {\n    throw 'dicomParser.readEncapsulatedImageFrame: missing required parameter \\'pixelDataElement\\'';\n  }\n  if (frameIndex === undefined) {\n    throw 'dicomParser.readEncapsulatedImageFrame: missing required parameter \\'frameIndex\\'';\n  }\n  if (basicOffsetTable === undefined) {\n    throw 'dicomParser.readEncapsulatedImageFrame: parameter \\'pixelDataElement\\' does not have basicOffsetTable';\n  }\n  if (pixelDataElement.tag !== 'x7fe00010') {\n    throw 'dicomParser.readEncapsulatedImageFrame: parameter \\'pixelDataElement\\' refers to non pixel data tag (expected tag = x7fe00010)';\n  }\n  if (pixelDataElement.encapsulatedPixelData !== true) {\n    throw 'dicomParser.readEncapsulatedImageFrame: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.hadUndefinedLength !== true) {\n    throw 'dicomParser.readEncapsulatedImageFrame: parameter \\'pixelDataElement\\' refers to pixel data element that does not have undefined length';\n  }\n  if (pixelDataElement.fragments === undefined) {\n    throw 'dicomParser.readEncapsulatedImageFrame: parameter \\'pixelDataElement\\' refers to pixel data element that does not have fragments';\n  }\n  if (basicOffsetTable.length === 0) {\n    throw 'dicomParser.readEncapsulatedImageFrame: basicOffsetTable has zero entries';\n  }\n  if (frameIndex < 0) {\n    throw 'dicomParser.readEncapsulatedImageFrame: parameter \\'frameIndex\\' must be >= 0';\n  }\n  if (frameIndex >= basicOffsetTable.length) {\n    throw 'dicomParser.readEncapsulatedImageFrame: parameter \\'frameIndex\\' must be < basicOffsetTable.length';\n  }\n\n  // find starting fragment based on the offset for the frame in the basic offset table\n  const offset = basicOffsetTable[frameIndex];\n  const startFragmentIndex = findFragmentIndexWithOffset(fragments, offset);\n\n  if (startFragmentIndex === undefined) {\n    throw 'dicomParser.readEncapsulatedImageFrame: unable to find fragment that matches basic offset table entry';\n  }\n\n  // calculate the number of fragments for this frame\n  const numFragments = calculateNumberOfFragmentsForFrame(frameIndex, basicOffsetTable, fragments, startFragmentIndex);\n\n  // now extract the frame from the fragments\n  return readEncapsulatedPixelDataFromFragments(dataSet, pixelDataElement, startFragmentIndex, numFragments, fragments);\n}\n","import readEncapsulatedImageFrame from './readEncapsulatedImageFrame.js';\nimport readEncapsulatedPixelDataFromFragments from './readEncapsulatedPixelDataFromFragments.js';\n\n/**\n * Functionality for extracting encapsulated pixel data\n */\n\nlet deprecatedNoticeLogged = false;\n\n/**\n * Returns the pixel data for the specified frame in an encapsulated pixel data element.  If no basic offset\n * table is present, it assumes that all fragments are for one frame.  Note that this assumption/logic is not\n * valid for multi-frame instances so this function has been deprecated and will eventually be removed.  Code\n * should be updated to use readEncapsulatedPixelDataFromFragments() or readEncapsulatedImageFrame()\n *\n * @deprecated since version 1.6 - use readEncapsulatedPixelDataFromFragments() or readEncapsulatedImageFrame()\n * @param dataSet - the dataSet containing the encapsulated pixel data\n * @param pixelDataElement - the pixel data element (x7fe00010) to extract the frame from\n * @param frame - the zero based frame index\n * @returns {object} with the encapsulated pixel data\n */\nexport default function readEncapsulatedPixelData (dataSet, pixelDataElement, frame) {\n  if (!deprecatedNoticeLogged) {\n    deprecatedNoticeLogged = true;\n\n    if (console && console.log) {\n      console.log('WARNING: dicomParser.readEncapsulatedPixelData() has been deprecated');\n    }\n  }\n\n  if (dataSet === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelData: missing required parameter \\'dataSet\\'';\n  }\n  if (pixelDataElement === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelData: missing required parameter \\'element\\'';\n  }\n  if (frame === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelData: missing required parameter \\'frame\\'';\n  }\n  if (pixelDataElement.tag !== 'x7fe00010') {\n    throw 'dicomParser.readEncapsulatedPixelData: parameter \\'element\\' refers to non pixel data tag (expected tag = x7fe00010)';\n  }\n  if (pixelDataElement.encapsulatedPixelData !== true) {\n    throw 'dicomParser.readEncapsulatedPixelData: parameter \\'element\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.hadUndefinedLength !== true) {\n    throw 'dicomParser.readEncapsulatedPixelData: parameter \\'element\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.basicOffsetTable === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelData: parameter \\'element\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.fragments === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelData: parameter \\'element\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (frame < 0) {\n    throw 'dicomParser.readEncapsulatedPixelData: parameter \\'frame\\' must be >= 0';\n  }\n\n  // If the basic offset table is not empty, we can extract the frame\n  if (pixelDataElement.basicOffsetTable.length !== 0) {\n    return readEncapsulatedImageFrame(dataSet, pixelDataElement, frame);\n  }\n\n  // No basic offset table, assume all fragments are for one frame - NOTE that this is NOT a valid\n  // assumption but is the original behavior so we are keeping it for now\n  return readEncapsulatedPixelDataFromFragments(dataSet, pixelDataElement, 0, pixelDataElement.fragments.length);\n}\n","import alloc from './alloc.js';\nimport ByteStream from './byteStream.js';\nimport readSequenceItem from './readSequenceItem.js';\nimport sharedCopy from './sharedCopy.js';\n\n/**\n * Functionality for extracting encapsulated pixel data\n */\n\nconst calculateBufferSize = (fragments, startFragment, numFragments) => {\n  let bufferSize = 0;\n\n  for (let i = startFragment; i < startFragment + numFragments; i++) {\n    bufferSize += fragments[i].length;\n  }\n\n  return bufferSize;\n};\n\n/**\n * Returns the encapsulated pixel data from the specified fragments.  Use this function when you know\n * the fragments you want to extract data from.  See\n *\n * @param dataSet - the dataSet containing the encapsulated pixel data\n * @param pixelDataElement - the pixel data element (x7fe00010) to extract the fragment data from\n * @param startFragmentIndex - zero based index of the first fragment to extract from\n * @param [numFragments] - the number of fragments to extract from, default is 1\n * @param [fragments] - optional array of objects describing each fragment (offset, position, length)\n * @returns {object} byte array with the encapsulated pixel data\n */\nexport default function readEncapsulatedPixelDataFromFragments (dataSet, pixelDataElement, startFragmentIndex, numFragments, fragments) {\n  // default values\n  numFragments = numFragments || 1;\n  fragments = fragments || pixelDataElement.fragments;\n\n  // check parameters\n  if (dataSet === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter \\'dataSet\\'';\n  }\n  if (pixelDataElement === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter \\'pixelDataElement\\'';\n  }\n  if (startFragmentIndex === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter \\'startFragmentIndex\\'';\n  }\n  if (numFragments === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter \\'numFragments\\'';\n  }\n  if (pixelDataElement.tag !== 'x7fe00010') {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'pixelDataElement\\' refers to non pixel data tag (expected tag = x7fe00010';\n  }\n  if (pixelDataElement.encapsulatedPixelData !== true) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.hadUndefinedLength !== true) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.basicOffsetTable === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.fragments === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.fragments.length <= 0) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (startFragmentIndex < 0) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'startFragmentIndex\\' must be >= 0';\n  }\n  if (startFragmentIndex >= pixelDataElement.fragments.length) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'startFragmentIndex\\' must be < number of fragments';\n  }\n  if (numFragments < 1) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'numFragments\\' must be > 0';\n  }\n  if (startFragmentIndex + numFragments > pixelDataElement.fragments.length) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'startFragment\\' + \\'numFragments\\' < number of fragments';\n  }\n\n  // create byte stream on the data for this pixel data element\n  const byteStream = new ByteStream(dataSet.byteArrayParser, dataSet.byteArray, pixelDataElement.dataOffset);\n\n  // seek past the basic offset table (no need to parse it again since we already have)\n  const basicOffsetTable = readSequenceItem(byteStream);\n\n  if (basicOffsetTable.tag !== 'xfffee000') {\n    throw 'dicomParser.readEncapsulatedPixelData: missing basic offset table xfffee000';\n  }\n\n  byteStream.seek(basicOffsetTable.length);\n\n  const fragmentZeroPosition = byteStream.position;\n\n  // tag + length\n  const fragmentHeaderSize = 8;\n\n  // if there is only one fragment, return a view on this array to avoid copying\n  if (numFragments === 1) {\n    return sharedCopy(byteStream.byteArray, fragmentZeroPosition + fragments[startFragmentIndex].offset + fragmentHeaderSize, fragments[startFragmentIndex].length);\n  }\n\n  // more than one fragment, combine all of the fragments into one buffer\n  const bufferSize = calculateBufferSize(fragments, startFragmentIndex, numFragments);\n  const pixelData = alloc(byteStream.byteArray, bufferSize);\n  let pixelDataIndex = 0;\n\n  for (let i = startFragmentIndex; i < startFragmentIndex + numFragments; i++) {\n    let fragmentOffset = fragmentZeroPosition + fragments[i].offset + fragmentHeaderSize;\n\n    for (let j = 0; j < fragments[i].length; j++) {\n      pixelData[pixelDataIndex++] = byteStream.byteArray[fragmentOffset++];\n    }\n  }\n\n  return pixelData;\n}\n","import ByteStream from './byteStream.js';\nimport DataSet from './dataSet.js';\nimport littleEndianByteArrayParser from './littleEndianByteArrayParser.js';\nimport readDicomElementExplicit from './readDicomElementExplicit.js';\n\n/**\n * Parses a DICOM P10 byte array and returns a DataSet object with the parsed elements.  If the options\n * argument is supplied and it contains the untilTag property, parsing will stop once that\n * tag is encoutered.  This can be used to parse partial byte streams.\n *\n * @param byteArray the byte array\n * @param options object to control parsing behavior (optional)\n * @returns {DataSet}\n * @throws error if an error occurs while parsing.  The exception object will contain a property dataSet with the\n *         elements successfully parsed before the error.\n */\n\nexport default function readPart10Header (byteArray, options) {\n  if (byteArray === undefined) {\n    throw 'dicomParser.readPart10Header: missing required parameter \\'byteArray\\'';\n  }\n\n  const littleEndianByteStream = new ByteStream(littleEndianByteArrayParser, byteArray);\n\n  function readPrefix () {\n    littleEndianByteStream.seek(128);\n    const prefix = littleEndianByteStream.readFixedString(4);\n\n    if (prefix !== 'DICM') {\n      throw 'dicomParser.readPart10Header: DICM prefix not found at location 132 - this is not a valid DICOM P10 file.';\n    }\n  }\n\n  // main function here\n  function readTheHeader () {\n    // Per the DICOM standard, the header is always encoded in Explicit VR Little Endian (see PS3.10, section 7.1)\n    // so use littleEndianByteStream throughout this method regardless of the transfer syntax\n    readPrefix();\n\n    const warnings = [];\n    const elements = {};\n\n    while (littleEndianByteStream.position < littleEndianByteStream.byteArray.length) {\n      const position = littleEndianByteStream.position;\n      const element = readDicomElementExplicit(littleEndianByteStream, warnings);\n\n      if (element.tag > 'x0002ffff') {\n        littleEndianByteStream.position = position;\n        break;\n      }\n      // Cache the littleEndianByteArrayParser for meta header elements, since the rest of the data set may be big endian\n      // and this parser will be needed later if the meta header values are to be read.\n      element.parser = littleEndianByteArrayParser;\n      elements[element.tag] = element;\n    }\n\n    const metaHeaderDataSet = new DataSet(littleEndianByteStream.byteArrayParser, littleEndianByteStream.byteArray, elements);\n\n    metaHeaderDataSet.warnings = littleEndianByteStream.warnings;\n    metaHeaderDataSet.position = littleEndianByteStream.position;\n\n    return metaHeaderDataSet;\n  }\n\n  // This is where we actually start parsing\n  return readTheHeader();\n}\n","import DataSet from './dataSet.js';\nimport readDicomElementExplicit from './readDicomElementExplicit.js';\nimport readSequenceItem from './readSequenceItem.js';\nimport readTag from './readTag.js';\nimport * as parseDicomDataSet from './parseDicomDataSet.js';\n\n/**\n * Internal helper functions for parsing DICOM elements\n */\n\nfunction readDicomDataSetExplicitUndefinedLength (byteStream, warnings) {\n  const elements = {};\n\n  while (byteStream.position < byteStream.byteArray.length) {\n    const element = readDicomElementExplicit(byteStream, warnings);\n\n    elements[element.tag] = element;\n\n    // we hit an item delimiter tag, return the current offset to mark\n    // the end of this sequence item\n    if (element.tag === 'xfffee00d') {\n      return new DataSet(byteStream.byteArrayParser, byteStream.byteArray, elements);\n    }\n  }\n\n  // eof encountered - log a warning and return what we have for the element\n  warnings.push('eof encountered before finding item delimiter tag while reading sequence item of undefined length');\n\n  return new DataSet(byteStream.byteArrayParser, byteStream.byteArray, elements);\n}\n\nfunction readSequenceItemExplicit (byteStream, warnings) {\n  const item = readSequenceItem(byteStream);\n\n  if (item.length === 4294967295) {\n    item.hadUndefinedLength = true;\n    item.dataSet = readDicomDataSetExplicitUndefinedLength(byteStream, warnings);\n    item.length = byteStream.position - item.dataOffset;\n  } else {\n    item.dataSet = new DataSet(byteStream.byteArrayParser, byteStream.byteArray, {});\n    parseDicomDataSet.parseDicomDataSetExplicit(item.dataSet, byteStream, byteStream.position + item.length);\n  }\n\n  return item;\n}\n\nfunction readSQElementUndefinedLengthExplicit (byteStream, element, warnings) {\n  while ((byteStream.position + 4) <= byteStream.byteArray.length) {\n    // end reading this sequence if the next tag is the sequence delimitation item\n    const nextTag = readTag(byteStream);\n\n    byteStream.seek(-4);\n    if (nextTag === 'xfffee0dd') {\n      // set the correct length\n      element.length = byteStream.position - element.dataOffset;\n      byteStream.seek(8);\n\n      return element;\n    }\n\n    const item = readSequenceItemExplicit(byteStream, warnings);\n\n    element.items.push(item);\n  }\n\n  warnings.push('eof encountered before finding sequence delimitation tag while reading sequence of undefined length');\n  element.length = byteStream.position - element.dataOffset;\n}\n\nfunction readSQElementKnownLengthExplicit (byteStream, element, warnings) {\n  const maxPosition = element.dataOffset + element.length;\n\n  while (byteStream.position < maxPosition) {\n    const item = readSequenceItemExplicit(byteStream, warnings);\n\n    element.items.push(item);\n  }\n}\n\nexport default function readSequenceItemsExplicit (byteStream, element, warnings) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.readSequenceItemsExplicit: missing required parameter \\'byteStream\\'';\n  }\n\n  if (element === undefined) {\n    throw 'dicomParser.readSequenceItemsExplicit: missing required parameter \\'element\\'';\n  }\n\n  element.items = [];\n\n  if (element.length === 4294967295) {\n    readSQElementUndefinedLengthExplicit(byteStream, element, warnings);\n  } else {\n    readSQElementKnownLengthExplicit(byteStream, element, warnings);\n  }\n}\n","import DataSet from './dataSet.js';\nimport readDicomElementImplicit from './readDicomElementImplicit.js';\nimport readSequenceItem from './readSequenceItem.js';\nimport readTag from './readTag.js';\nimport * as parseDicomDataSet from './parseDicomDataSet.js';\n\n/**\n * Internal helper functions for parsing DICOM elements\n */\n\nfunction readDicomDataSetImplicitUndefinedLength (byteStream, vrCallback) {\n  const elements = {};\n\n  while (byteStream.position < byteStream.byteArray.length) {\n    const element = readDicomElementImplicit(byteStream, undefined, vrCallback);\n\n    elements[element.tag] = element;\n\n    // we hit an item delimiter tag, return the current offset to mark\n    // the end of this sequence item\n    if (element.tag === 'xfffee00d') {\n      return new DataSet(byteStream.byteArrayParser, byteStream.byteArray, elements);\n    }\n  }\n\n  // eof encountered - log a warning and return what we have for the element\n  byteStream.warnings.push('eof encountered before finding sequence item delimiter in sequence item of undefined length');\n\n  return new DataSet(byteStream.byteArrayParser, byteStream.byteArray, elements);\n}\n\nfunction readSequenceItemImplicit (byteStream, vrCallback) {\n  const item = readSequenceItem(byteStream);\n\n  if (item.length === 4294967295) {\n    item.hadUndefinedLength = true;\n    item.dataSet = readDicomDataSetImplicitUndefinedLength(byteStream, vrCallback);\n    item.length = byteStream.position - item.dataOffset;\n  } else {\n    item.dataSet = new DataSet(byteStream.byteArrayParser, byteStream.byteArray, {});\n    parseDicomDataSet.parseDicomDataSetImplicit(item.dataSet, byteStream, byteStream.position + item.length, { vrCallback });\n  }\n\n  return item;\n}\n\nfunction readSQElementUndefinedLengthImplicit (byteStream, element, vrCallback) {\n  while ((byteStream.position + 4) <= byteStream.byteArray.length) {\n    // end reading this sequence if the next tag is the sequence delimitation item\n    const nextTag = readTag(byteStream);\n\n    byteStream.seek(-4);\n\n    if (nextTag === 'xfffee0dd') {\n      // set the correct length\n      element.length = byteStream.position - element.dataOffset;\n      byteStream.seek(8);\n\n      return element;\n    }\n\n    const item = readSequenceItemImplicit(byteStream, vrCallback);\n\n    element.items.push(item);\n  }\n\n  byteStream.warnings.push('eof encountered before finding sequence delimiter in sequence of undefined length');\n  element.length = byteStream.byteArray.length - element.dataOffset;\n}\n\nfunction readSQElementKnownLengthImplicit (byteStream, element, vrCallback) {\n  const maxPosition = element.dataOffset + element.length;\n\n  while (byteStream.position < maxPosition) {\n    const item = readSequenceItemImplicit(byteStream, vrCallback);\n\n    element.items.push(item);\n  }\n}\n\n/**\n * Reads sequence items for an element in an implicit little endian byte stream\n * @param byteStream the implicit little endian byte stream\n * @param element the element to read the sequence items for\n * @param vrCallback an optional method that returns a VR string given a tag\n */\nexport default function readSequenceItemsImplicit (byteStream, element, vrCallback) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.readSequenceItemsImplicit: missing required parameter \\'byteStream\\'';\n  }\n\n  if (element === undefined) {\n    throw 'dicomParser.readSequenceItemsImplicit: missing required parameter \\'element\\'';\n  }\n\n  element.items = [];\n\n  if (element.length === 4294967295) {\n    readSQElementUndefinedLengthImplicit(byteStream, element, vrCallback);\n  } else {\n    readSQElementKnownLengthImplicit(byteStream, element, vrCallback);\n  }\n}\n","import readTag from './readTag.js';\n\n/**\n * Internal helper functions for parsing DICOM elements\n */\n\n/**\n * Reads the tag and length of a sequence item and returns them as an object with the following properties\n *  tag : string for the tag of this element in the format xggggeeee\n *  length: the number of bytes in this item or 4294967295 if undefined\n *  dataOffset: the offset into the byteStream of the data for this item\n * @param byteStream the byte\n * @returns {{tag: string, length: integer, dataOffset: integer}}\n */\nexport default function readSequenceItem (byteStream) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.readSequenceItem: missing required parameter \\'byteStream\\'';\n  }\n\n  const element = {\n    tag: readTag(byteStream),\n    length: byteStream.readUint32(),\n    dataOffset: byteStream.position\n  };\n\n  if (element.tag !== 'xfffee000') {\n    throw `dicomParser.readSequenceItem: item tag (FFFE,E000) not found at offset ${byteStream.position}`;\n  }\n\n  return element;\n}\n","/**\n * Internal helper functions for parsing DICOM elements\n */\n\n/**\n * Reads a tag (group number and element number) from a byteStream\n * @param byteStream the byte stream to read from\n * @returns {string} the tag in format xggggeeee where gggg is the lowercase hex value of the group number\n * and eeee is the lower case hex value of the element number\n */\nexport default function readTag (byteStream) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.readTag: missing required parameter \\'byteStream\\'';\n  }\n\n  const groupNumber = byteStream.readUint16() * 256 * 256;\n  const elementNumber = byteStream.readUint16();\n  const tag = `x${(`00000000${(groupNumber + elementNumber).toString(16)}`).substr(-8)}`;\n\n  return tag;\n}\n","/**\n *\n * Internal helper function to create a shared copy of a byteArray\n *\n */\n\n/**\n * Creates a view of the underlying byteArray.  The view is of the same type as the byteArray (e.g.\n * Uint8Array or Buffer) and shares the same underlying memory (changing one changes the other)\n * @param byteArray the underlying byteArray (either Uint8Array or Buffer)\n * @param byteOffset offset into the underlying byteArray to create the view of\n * @param length number of bytes in the view\n * @returns {object} Uint8Array or Buffer depending on the type of byteArray\n */\nexport default function sharedCopy (byteArray, byteOffset, length) {\n  if (typeof Buffer !== 'undefined' && byteArray instanceof Buffer) {\n    return byteArray.slice(byteOffset, byteOffset + length);\n  } else if (byteArray instanceof Uint8Array) {\n    return new Uint8Array(byteArray.buffer, byteArray.byteOffset + byteOffset, length);\n  }\n  throw 'dicomParser.from: unknown type for byteArray';\n}\n","// Each JPEG image has an end of image marker 0xFFD9\nfunction isEndOfImageMarker (dataSet, position) {\n  return (dataSet.byteArray[position] === 0xFF &&\n  dataSet.byteArray[position + 1] === 0xD9);\n}\n\nfunction isFragmentEndOfImage (dataSet, pixelDataElement, fragmentIndex) {\n  var fragment = pixelDataElement.fragments[fragmentIndex];\n  // Need to check the last two bytes and the last three bytes for marker since odd length\n  // fragments are zero padded\n\n  if (isEndOfImageMarker(dataSet, fragment.position + fragment.length - 2) ||\n    isEndOfImageMarker(dataSet, fragment.position + fragment.length - 3)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction findLastImageFrameFragmentIndex (dataSet, pixelDataElement, startFragment) {\n  for (var fragmentIndex = startFragment; fragmentIndex < pixelDataElement.fragments.length; fragmentIndex++) {\n    if (isFragmentEndOfImage(dataSet, pixelDataElement, fragmentIndex)) {\n      return fragmentIndex;\n    }\n  }\n}\n\n/**\n * Creates a basic offset table by scanning fragments for JPEG start of image and end Of Image markers\n * @param {object} dataSet - the parsed dicom dataset\n * @param {object} pixelDataElement - the pixel data element\n * @param [fragments] - optional array of objects describing each fragment (offset, position, length)\n * @returns {Array} basic offset table (array of offsets to beginning of each frame)\n */\nexport default function createJPEGBasicOffsetTable (dataSet, pixelDataElement, fragments) {\n  // Validate parameters\n  if (dataSet === undefined) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: missing required parameter dataSet';\n  }\n  if (pixelDataElement === undefined) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: missing required parameter pixelDataElement';\n  }\n  if (pixelDataElement.tag !== 'x7fe00010') {\n    throw 'dicomParser.createJPEGBasicOffsetTable: parameter \\'pixelDataElement\\' refers to non pixel data tag (expected tag = x7fe00010\\'';\n  }\n  if (pixelDataElement.encapsulatedPixelData !== true) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.hadUndefinedLength !== true) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.basicOffsetTable === undefined) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.fragments === undefined) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.fragments.length <= 0) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (fragments && fragments.length <= 0) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: parameter \\'fragments\\' must not be zero length';\n  }\n\n  // Default values\n  fragments = fragments || pixelDataElement.fragments;\n\n  var basicOffsetTable = [];\n\n  var startFragmentIndex = 0;\n\n  while (true) {\n    // Add the offset for the start fragment\n    basicOffsetTable.push(pixelDataElement.fragments[startFragmentIndex].offset);\n    var endFragmentIndex = findLastImageFrameFragmentIndex(dataSet, pixelDataElement, startFragmentIndex);\n\n    if (endFragmentIndex === undefined || endFragmentIndex === pixelDataElement.fragments.length - 1) {\n      return basicOffsetTable;\n    }\n    startFragmentIndex = endFragmentIndex + 1;\n  }\n}\n","import explicitElementToString from './elementToString.js';\nimport * as util from './util.js';\n\n/**\n * converts an explicit dataSet to a javascript object\n * @param dataSet\n * @param options\n */\nexport default function explicitDataSetToJS (dataSet, options) {\n  if (dataSet === undefined) {\n    throw 'dicomParser.explicitDataSetToJS: missing required parameter dataSet';\n  }\n\n  options = options || {\n    omitPrivateAttibutes: true, // true if private elements should be omitted\n    maxElementLength: 128 // maximum element length to try and convert to string format\n  };\n\n  var result = {\n\n  };\n\n  for (var tag in dataSet.elements) {\n    var element = dataSet.elements[tag];\n\n    // skip this element if it a private element and our options specify that we should\n    if (options.omitPrivateAttibutes === true && util.isPrivateTag(tag)) {\n      continue;\n    }\n\n    if (element.items) {\n      // handle sequences\n      var sequenceItems = [];\n\n      for (var i = 0; i < element.items.length; i++) {\n        sequenceItems.push(explicitDataSetToJS(element.items[i].dataSet, options));\n      }\n      result[tag] = sequenceItems;\n    } else {\n      var asString;\n\n      asString = undefined;\n      if (element.length < options.maxElementLength) {\n        asString = explicitElementToString(dataSet, element);\n      }\n\n      if (asString !== undefined) {\n        result[tag] = asString;\n      } else {\n        result[tag] = {\n          dataOffset: element.dataOffset,\n          length: element.length\n        };\n      }\n    }\n  }\n\n  return result;\n}\n","import * as util from './util.js';\n\n/**\n * Converts an explicit VR element to a string or undefined if it is not possible to convert.\n * Throws an error if an implicit element is supplied\n * @param dataSet\n * @param element\n * @returns {*}\n */\nexport default function explicitElementToString (dataSet, element) {\n  if (dataSet === undefined || element === undefined) {\n    throw 'dicomParser.explicitElementToString: missing required parameters';\n  }\n  if (element.vr === undefined) {\n    throw 'dicomParser.explicitElementToString: cannot convert implicit element to string';\n  }\n  var vr = element.vr;\n  var tag = element.tag;\n\n  var textResult;\n\n  function multiElementToString (numItems, func) {\n    var result = '';\n\n    for (var i = 0; i < numItems; i++) {\n      if (i !== 0) {\n        result += '/';\n      }\n      result += func.call(dataSet, tag, i).toString();\n    }\n\n    return result;\n  }\n\n  if (util.isStringVr(vr) === true) {\n    textResult = dataSet.string(tag);\n  } else if (vr === 'AT') {\n    var num = dataSet.uint32(tag);\n\n    if (num === undefined) {\n      return undefined;\n    }\n    if (num < 0) {\n      num = 0xFFFFFFFF + num + 1;\n    }\n\n    return `x${num.toString(16).toUpperCase()}`;\n  } else if (vr === 'US') {\n    textResult = multiElementToString(element.length / 2, dataSet.uint16);\n  } else if (vr === 'SS') {\n    textResult = multiElementToString(element.length / 2, dataSet.int16);\n  } else if (vr === 'UL') {\n    textResult = multiElementToString(element.length / 4, dataSet.uint32);\n  } else if (vr === 'SL') {\n    textResult = multiElementToString(element.length / 4, dataSet.int32);\n  } else if (vr === 'FD') {\n    textResult = multiElementToString(element.length / 8, dataSet.double);\n  } else if (vr === 'FL') {\n    textResult = multiElementToString(element.length / 4, dataSet.float);\n  }\n\n  return textResult;\n}\n","export * from './util.js';\n\nexport { default as parseTM } from './parseTM.js';\nexport { default as parseDA } from './parseDA.js';\nexport { default as explicitElementToString } from './elementToString.js';\nexport { default as explicitDataSetToJS } from './dataSetToJS.js';\nexport { default as createJPEGBasicOffsetTable } from './createJPEGBasicOffsetTable.js';\n","// algorithm based on http://stackoverflow.com/questions/1433030/validate-number-of-days-in-a-given-month\nfunction daysInMonth (m, y) { // m is 0 indexed: 0-11\n  switch (m) {\n  case 2 :\n    return (y % 4 == 0 && y % 100) || y % 400 == 0 ? 29 : 28;\n  case 9 : case 4 : case 6 : case 11 :\n    return 30;\n  default :\n    return 31;\n  }\n}\n\nfunction isValidDate (d, m, y) {\n  // make year is a number\n  if (isNaN(y)) {\n    return false;\n  }\n\n  return m > 0 && m <= 12 && d > 0 && d <= daysInMonth(m, y);\n}\n\n\n/**\n * Parses a DA formatted string into a Javascript object\n * @param {string} date a string in the DA VR format\n * @param {boolean} [validate] - true if an exception should be thrown if the date is invalid\n * @returns {*} Javascript object with properties year, month and day or undefined if not present or not 8 bytes long\n */\nexport default function parseDA (date, validate) {\n  if (date && date.length === 8) {\n    var yyyy = parseInt(date.substring(0, 4), 10);\n    var mm = parseInt(date.substring(4, 6), 10);\n    var dd = parseInt(date.substring(6, 8), 10);\n\n    if (validate) {\n      if (isValidDate(dd, mm, yyyy) !== true) {\n        throw `invalid DA '${date}'`;\n      }\n    }\n\n    return {\n      year: yyyy,\n      month: mm,\n      day: dd\n    };\n  }\n  if (validate) {\n    throw `invalid DA '${date}'`;\n  }\n\n  return undefined;\n}\n","/**\n * Parses a TM formatted string into a javascript object with properties for hours, minutes, seconds and fractionalSeconds\n * @param {string} time - a string in the TM VR format\n * @param {boolean} [validate] - true if an exception should be thrown if the date is invalid\n * @returns {*} javascript object with properties for hours, minutes, seconds and fractionalSeconds or undefined if no element or data.  Missing fields are set to undefined\n */\nexport default function parseTM (time, validate) {\n  if (time.length >= 2) // must at least have HH\n  {\n    // 0123456789\n    // HHMMSS.FFFFFF\n    var hh = parseInt(time.substring(0, 2), 10);\n    var mm = time.length >= 4 ? parseInt(time.substring(2, 4), 10) : undefined;\n    var ss = time.length >= 6 ? parseInt(time.substring(4, 6), 10) : undefined;\n    var ffffff = time.length >= 8 ? parseInt(time.substring(7, 13), 10) : undefined;\n\n    if (validate) {\n      if ((isNaN(hh)) ||\n        (mm !== undefined && isNaN(mm)) ||\n        (ss !== undefined && isNaN(ss)) ||\n        (ffffff !== undefined && isNaN(ffffff)) ||\n        (hh < 0 || hh > 23) ||\n        (mm && (mm < 0 || mm > 59)) ||\n        (ss && (ss < 0 || ss > 59)) ||\n        (ffffff && (ffffff < 0 || ffffff > 999999))) {\n        throw `invalid TM '${time}'`;\n      }\n    }\n\n    return {\n      hours: hh,\n      minutes: mm,\n      seconds: ss,\n      fractionalSeconds: ffffff\n    };\n  }\n\n  if (validate) {\n    throw `invalid TM '${time}'`;\n  }\n\n  return undefined;\n}\n","const stringVrs = {\n  AE: true,\n  AS: true,\n  AT: false,\n  CS: true,\n  DA: true,\n  DS: true,\n  DT: true,\n  FL: false,\n  FD: false,\n  IS: true,\n  LO: true,\n  LT: true,\n  OB: false,\n  OD: false,\n  OF: false,\n  OW: false,\n  PN: true,\n  SH: true,\n  SL: false,\n  SQ: false,\n  SS: false,\n  ST: true,\n  TM: true,\n  UI: true,\n  UL: false,\n  UN: undefined, // dunno\n  UR: true,\n  US: false,\n  UT: true\n};\n\n/**\n * Tests to see if vr is a string or not.\n * @param vr\n * @returns true if string, false it not string, undefined if unknown vr or UN type\n */\nconst isStringVr = (vr) => stringVrs[vr];\n\n/**\n * Tests to see if a given tag in the format xggggeeee is a private tag or not\n * @param tag\n * @returns {boolean}\n */\nconst isPrivateTag = (tag) => {\n  const lastGroupDigit = parseInt(tag[4], 10);\n  const groupIsOdd = (lastGroupDigit % 2) === 1;\n\n\n  return groupIsOdd;\n};\n\n/**\n * Parses a PN formatted string into a javascript object with properties for givenName, familyName, middleName, prefix and suffix\n * @param personName a string in the PN VR format\n * @param index\n * @returns {*} javascript object with properties for givenName, familyName, middleName, prefix and suffix or undefined if no element or data\n */\nconst parsePN = (personName) => {\n  if (personName === undefined) {\n    return undefined;\n  }\n  const stringValues = personName.split('^');\n\n\n  return {\n    familyName: stringValues[0],\n    givenName: stringValues[1],\n    middleName: stringValues[2],\n    prefix: stringValues[3],\n    suffix: stringValues[4]\n  };\n};\n\nexport {\n  isStringVr,\n  isPrivateTag,\n  parsePN\n};\n","export default '1.8.0';\n","module.exports = require(\"zlib\");"],"sourceRoot":""}